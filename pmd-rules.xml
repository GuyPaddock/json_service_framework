<?xml version="1.0"?>
<ruleset name="Custom ruleset"
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    Rosie's accepted coding standards for PMD. Last updated 2018-02-20.
  </description>

  <!-- Basic
       =====
       The Basic ruleset contains a collection of good practices which should be followed. -->
  <rule ref="rulesets/java/basic.xml" />


  <!-- Braces
       ======
       The Braces ruleset contains rules regarding the use and placement of braces. -->
  <rule ref="rulesets/java/braces.xml" />


  <!-- Clone Implementation
       ====================
       The Clone Implementation ruleset contains a collection of rules that find questionable usages
       of the clone() method. -->
  <rule ref="rulesets/java/clone.xml" />

  <!-- Code Size
       =========
       The Code Size ruleset contains rules that find problems related to code size or
       complexity. -->
  <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity" />

  <rule ref="rulesets/java/codesize.xml/NPathComplexity" />

  <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
    <properties>
      <property name="minimum" value="750"/>
    </properties>
  </rule>

  <rule ref="rulesets/java/codesize.xml/NcssMethodCount" />

  <rule ref="rulesets/java/codesize.xml/NcssConstructorCount" />

  <rule ref="rulesets/java/codesize.xml/TooManyFields" />

  <rule ref="rulesets/java/codesize.xml/TooManyMethods">
    <properties>
      <property name="minimum" value="50"/>
    </properties>
  </rule>

  <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
    <properties>
      <property name="minimum" value="25"/>
    </properties>
  </rule>

  <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
    <properties>
      <property name="minimum" value="5"/>
    </properties>
  </rule>

  <!-- Comments
       =========
       Rules intended to catch errors related to code comments. -->
  <rule ref="rulesets/java/comments.xml/CommentRequired" />

  <rule ref="rulesets/java/comments.xml/CommentSize">
    <properties>
      <property name="maxLines" value="100"/>
      <property name="maxLineLength" value="100"/>
    </properties>
  </rule>

  <rule ref="rulesets/java/comments.xml/CommentDefaultAccessModifier" />

  <!-- Controversial
       =============
       The Controversial ruleset contains rules that, for whatever reason, are considered
       controversial. They are held here to allow people to include them as they see fit within
       their custom rulesets.
    -->
  <rule ref="rulesets/java/controversial.xml/OnlyOneReturn" />
  <rule ref="rulesets/java/controversial.xml/DontImportSun" />
  <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape" />
  <rule ref="rulesets/java/controversial.xml/CallSuperInConstructor" />
  <rule ref="rulesets/java/controversial.xml/DefaultPackage" />
  <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType" />
  <rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine" />
  <rule ref="rulesets/java/controversial.xml/AvoidPrefixingMethodParameters" />
  <rule ref="rulesets/java/controversial.xml/AvoidLiteralsInIfCondition" />
  <rule ref="rulesets/java/controversial.xml/UseObjectForClearerAPI" />

  <!-- Coupling
       ========
       Rules which find instances of high or inappropriate coupling between objects and packages.
    -->
  <rule ref="rulesets/java/coupling.xml">
    <exclude name="LoosePackageCoupling" />
  </rule>

  <!-- Design
       ======
       Rules which find instances of high or inappropriate coupling between objects and packages.
    -->
  <rule ref="rulesets/java/design.xml">
    <exclude name="UseSingleton" />
    <exclude name="ConstructorCallsOverridableMethod" />
    <exclude name="NonStaticInitializer" />
    <exclude name="UseLocaleWithCaseConversions" />
    <exclude name="PositionLiteralsFirstInComparisons" />
    <exclude name="PositionLiteralsFirstInCaseInsensitiveComparisons" />
    <exclude name="UnnecessaryLocalBeforeReturn" />
    <exclude name="AvoidConstantsInterface" />
  </rule>

  <!-- Empty Code
       ==========
       The Empty Code ruleset contains rules that find empty statements of any kind (empty method,
       empty block statement, empty try or catch block,â€¦).
    -->
  <rule ref="rulesets/java/empty.xml" />

  <!-- Finalizer
       =========
       These rules deal with different problems that can occur with finalizers.
    -->
  <rule ref="rulesets/java/finalizers.xml" />

  <!-- Import Statements
       =================
       These rules deal with different problems that can occur with import statements.
    -->
  <rule ref="rulesets/java/imports.xml" />

  <!-- JavaBeans
       =========
       The JavaBeans Ruleset catches instances of bean rules not being followed.
    -->
  <rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID" />

  <!-- JUnit
       =====
       These rules deal with different problems that can occur with JUnit tests.
    -->
  <rule ref="rulesets/java/junit.xml" />

  <!-- Java Logging
       ============
       The Java Logging ruleset contains a collection of rules that find questionable usages of the
       logger.
    -->
  <rule ref="rulesets/java/logging-java.xml" />

  <!-- Migration
       =========
       Contains rules about migrating from one JDK version to another.
    -->
  <rule ref="rulesets/java/migrating_to_13.xml" />

  <rule ref="rulesets/java/migrating_to_14.xml" />

  <rule ref="rulesets/java/migrating_to_15.xml" />

  <rule ref="rulesets/java/migrating_to_junit4.xml">
    <!-- Expected does not check message -->
    <exclude name="JUnitUseExpected" />
  </rule>

  <!-- Naming
       ======
       The Naming Ruleset contains rules regarding preferred usage of names and identifiers.
    -->
  <rule ref="rulesets/java/naming.xml">
    <exclude name="GenericsNaming" />
  </rule>

  <rule ref="rulesets/java/naming.xml/LongVariable">
    <properties>
      <property name="minimum" value="26"/>
    </properties>
  </rule>

  <!-- Optimization
       ============
       These rules deal with different optimizations that generally apply to best practices.
    -->
  <rule ref="rulesets/java/optimizations.xml">
    <exclude name="SimplifyStartsWith" />
    <exclude name="PrematureDeclaration" />
  </rule>

  <!-- Strict Exceptions
       =================
       These rules provide some strict guidelines about throwing and catching exceptions.
    -->
  <rule ref="rulesets/java/strictexception.xml">
    <!-- JDK 8 encourages throwing an NPE -->
    <exclude name="AvoidThrowingNullPointerException" />
  </rule>

  <!-- String and StringBuffer
       =======================
       These rules deal with different issues that can arise with manipulation of the String,
       StringBuffer, or StringBuilder instances.
    -->
  <rule ref="rulesets/java/strings.xml">
    <exclude name="InefficientEmptyStringCheck" />
  </rule>

  <!-- Security Code Guidelines
       ========================
       These rules check the security guidelines from Sun, published at
       http://java.sun.com/security/seccodeguide.html#gcg
    -->
  <rule ref="rulesets/java/sunsecure.xml" />

  <!-- Unnecessary
       ===========
       The Unnecessary Ruleset contains a collection of rules for unnecessary code.
    -->
  <rule ref="rulesets/java/unnecessary.xml" />

  <!-- Unused Code
       ===========
       The Unused Code ruleset contains rules that find unused or ineffective code.
    -->
  <rule ref="rulesets/java/unusedcode.xml">
    <!-- Doesn't recognize Java 8 lambda parameters properly; doesn't allow us to
         denote unused params with an underscore. -->
    <exclude name="UnusedFormalParameter" />
  </rule>
</ruleset>
